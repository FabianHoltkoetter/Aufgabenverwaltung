package de.gaia.tasks.aufgabenservice.guilib.gen.services.model;

import de.muenchen.vaadin.guilib.util.Datastore;
import com.vaadin.data.util.BeanItemContainer;
import de.gaia.tasks.aufgabenservice.api.local.Aufgabe_;
import de.gaia.tasks.aufgabenservice.api.local.Mitarbeiter_;
import java.util.Optional;

/*
 * This file will be overwritten on every change of the model!
 * This file was automatically generated by GAIA.
 */
/**
 * Provides a simple Model for the Aufgabe_ in the GUI.
 */
public class Aufgabe_Datastore implements Datastore<Aufgabe_>{

    /** All the bearbeiter of the selectedAufgabe. */
    private final BeanItemContainer<Mitarbeiter_> selectedAufgabeBearbeiter = new BeanItemContainer<>(Mitarbeiter_.class);
    
    /** A List of all the Aufgabe_, possible reduced by the query. */
    private final BeanItemContainer<Aufgabe_> aufgabes = new BeanItemContainer<>(Aufgabe_.class);
    
    /** The current (single or none) selected aufgabe in the GUI. */
    private Optional<Aufgabe_> selectedAufgabe= Optional.empty();
    
    /** The query to filter the aufgabe. */
    private Optional<String> query = Optional.empty();

    public Optional<Aufgabe_> getSelectedAufgabe() {
        return selectedAufgabe;
    }

    /**
     * Set the Selected Aufgabe, if null the Optional will be empty.
     *
     * @param selectedAufgabe The Aufgabe_ to set as the selected one.
     */
    public void setSelectedAufgabe(Aufgabe_ selectedAufgabe) {
        this.selectedAufgabe = Optional.ofNullable(selectedAufgabe);
    }

    public BeanItemContainer<Aufgabe_> getAufgabes() {
        return aufgabes;
    }

    public Optional<String> getQuery() {
        return query;
    }

    /**
     * Set the current query.
     *
     * @param query The query.
     */
    public void setQuery(String query) {
        this.query = Optional.ofNullable(query);
    }

	/**
	 * Get the bearbeiter of the current selected Aufgabe_
	 */
    public BeanItemContainer<Mitarbeiter_> getSelectedAufgabeBearbeiter() {
        return selectedAufgabeBearbeiter;
    }

	@Override
	public BeanItemContainer<Aufgabe_> getEntityContainer() {
		return getAufgabes();
	}
}

